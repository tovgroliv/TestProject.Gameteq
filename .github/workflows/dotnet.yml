name: Build and Release

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    name: Build Artifacts
    runs-on: ubuntu-latest

    strategy:
      matrix:
        runtime: [win-x64, linux-x64, osx-x64, osx-arm64]
        project: [TestProject.Gameteq, TestProject.Gameteq.Server]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Get Version
        id: package_version
        uses: KageKirin/get-csproj-version@v1.0.0
        with:
          file: ./${{ matrix.project }}/${{ matrix.project }}.csproj

      - name: Publish ${{ matrix.project }} for ${{ matrix.runtime }}
        run: |
          dotnet publish ./${{ matrix.project }}/${{ matrix.project }}.csproj \
            -r ${{ matrix.runtime }} \
            --self-contained true \
            -p:PublishSingleFile=true \
            -c Release \
            -o publish/${{ matrix.project }}/${{ matrix.runtime }}

      - name: Create zip archive for ${{ matrix.project }} ${{ matrix.runtime }}
        run: |
          cd publish/${{ matrix.project }}/${{ matrix.runtime }}
          zip -r ../../../${{ matrix.project }}-${{ steps.package_version.outputs.version }}-${{ matrix.runtime }}.zip .
          cd -

      - name: Upload artifact ${{ matrix.project }}-${{ matrix.runtime }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.project }}-${{ steps.package_version.outputs.version }}-${{ matrix.runtime }}
          path: ${{ matrix.project }}-${{ steps.package_version.outputs.version }}-${{ matrix.runtime }}.zip

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Get Version (from Server)
        id: package_version
        uses: KageKirin/get-csproj-version@v1.0.0
        with:
          file: ./TestProject.Gameteq.Server/TestProject.Gameteq.Server.csproj

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.package_version.outputs.version }}
          name: Release v${{ steps.package_version.outputs.version }}
          draft: false
          prerelease: false
          files: artifacts/**/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
